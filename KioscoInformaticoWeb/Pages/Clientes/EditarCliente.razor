@page "/editarcliente"
@inject IGenericService<Cliente> ClienteService
@inject NavigationManager NavigationManager

<HeaderPage TitlePage="Editando un cliente" />

@if (cliente == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <h3>Cargando un cliente</h3>
    <EditForm Model="cliente" OnValidSubmit="GuardarCliente">
        <DataAnnotationsValidator />

        <label class="form-label mb-2" for="txtCliente">Nombre:</label>
        <InputText class="form-control mb-2" type="text" @bind-Value="cliente.Nombre" />
        <label class="form-label mb-2" for="txtCliente">Direccion:</label>
        <InputText class="form-control mb-2" type="text" @bind-Value="cliente.Direccion" />
        <label class="form-label mb-2" for="txtCliente">Telefonos:</label>
        <InputText class="form-control mb-2" type="text" @bind-Value="cliente.Telefonos" />

        <ValidationSummary />
        <button type="submit" class="btn btn-primary mb-2">Guardar</button>

    </EditForm>
}

@code {
    [SupplyParameterFromQuery]
    [Parameter]

    public int IdClienteEditado  { get; set; }

    private Cliente? cliente;

    protected override async Task OnInitializedAsync()
    {
    cliente = await ClienteService.GetByIdAsync(IdClienteEditado);
    }

    private async void GuardarCliente()
    {
    await ClienteService.UpdateAsync(cliente);
    NavigationManager.NavigateTo("/clientes");
    }
}
